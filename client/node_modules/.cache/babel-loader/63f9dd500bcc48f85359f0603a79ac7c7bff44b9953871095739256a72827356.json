{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\Sid\\\\Work\\\\Co-curriculars\\\\KiroHackathon\\\\client\\\\src\\\\components\\\\GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PromptInput from './PromptInput';\nimport GuessInput from './GuessInput';\nimport PlayerList from './PlayerList';\nimport GameImage from './GameImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRoom({\n  players,\n  currentPlayer,\n  roomId,\n  onToggleReady,\n  allReady,\n  socket,\n  isPlaying = false,\n  initialGameData = null,\n  onUpdatePlayers\n}) {\n  _s();\n  var _gameData$roundResult, _players$find;\n  const [gameData, setGameData] = useState(initialGameData || {\n    currentPromptGiver: null,\n    currentImage: '',\n    currentPrompt: '',\n    timeRemaining: 30,\n    promptTimeRemaining: 30,\n    round: 0,\n    maxRounds: 5,\n    gameState: 'waiting'\n  });\n  const [guesses, setGuesses] = useState([]);\n\n  // Update game data when initial data is provided\n  useEffect(() => {\n    if (initialGameData) {\n      console.log('Setting initial game data:', initialGameData);\n      setGameData(initialGameData);\n    }\n  }, [initialGameData]);\n  useEffect(() => {\n    console.log('GameRoom useEffect - isPlaying:', isPlaying);\n\n    // Clean up listeners (but NOT game_started unless we're playing)\n    socket.off('next_round');\n    socket.off('prompt_submitted');\n    socket.off('guess_submitted');\n    socket.off('round_ended');\n    socket.off('game_finished');\n    socket.off('timer_update');\n\n    // Only register game_started listener if we're actually playing\n    if (isPlaying) {\n      console.log('GameRoom: Registering game_started listener');\n      // Only clean up game_started if we're going to register it\n      socket.off('game_started');\n      socket.on('game_started', data => {\n        console.log('GameRoom received game_started:', data);\n        setGameData(prev => ({\n          ...prev,\n          currentPromptGiver: data.currentPromptGiver,\n          round: data.round,\n          gameState: 'waiting_for_prompt'\n        }));\n      });\n    } else {\n      console.log('GameRoom: NOT registering game_started listener (not playing)');\n    }\n    socket.on('next_round', data => {\n      // Update players with current scores\n      if (onUpdatePlayers && data.players) {\n        onUpdatePlayers(data.players);\n      }\n      setGameData(prev => ({\n        ...prev,\n        currentPromptGiver: data.currentPromptGiver,\n        round: data.round,\n        maxRounds: data.maxRounds,\n        gameState: data.gameState,\n        currentImage: '',\n        currentPrompt: '',\n        timeRemaining: 30,\n        roundResults: null\n      }));\n      setGuesses([]);\n    });\n    socket.on('prompt_submitted', data => {\n      console.log('Prompt submitted event received:', data);\n      setGameData(prev => {\n        const newGameData = {\n          ...prev,\n          currentImage: data.imageUrl,\n          gameState: 'guessing',\n          timeRemaining: data.timeRemaining || 30\n        };\n        console.log('Updated game data:', newGameData);\n        return newGameData;\n      });\n    });\n    socket.on('guess_submitted', data => {\n      console.log('Guess submitted event received:', data);\n      setGuesses(prev => {\n        const newGuesses = [...prev, data];\n        console.log('Updated guesses:', newGuesses);\n        return newGuesses;\n      });\n    });\n    socket.on('round_ended', data => {\n      console.log('Round ended:', data);\n      console.log('Players with updated scores:', data.players);\n      console.log('Guesses received:', data.guesses);\n      console.log('Guesses type:', typeof data.guesses);\n      console.log('Guesses is array:', Array.isArray(data.guesses));\n\n      // Update players with new scores\n      if (onUpdatePlayers && data.players) {\n        onUpdatePlayers(data.players);\n      }\n      setGameData(prev => ({\n        ...prev,\n        currentPrompt: data.originalPrompt,\n        gameState: 'round_results',\n        roundResults: {\n          ...data,\n          guesses: data.guesses || [] // Ensure it's always an array\n        }\n      }));\n    });\n    socket.on('game_finished', data => {\n      setGameData(prev => ({\n        ...prev,\n        gameState: 'finished'\n      }));\n    });\n    socket.on('timer_update', data => {\n      setGameData(prev => ({\n        ...prev,\n        timeRemaining: data.timeRemaining\n      }));\n    });\n    socket.on('prompt_timer_update', data => {\n      setGameData(prev => ({\n        ...prev,\n        promptTimeRemaining: data.timeRemaining\n      }));\n    });\n    return () => {\n      console.log('GameRoom cleanup - isPlaying:', isPlaying);\n      // Only clean up game_started if we registered it (when isPlaying is true)\n      if (isPlaying) {\n        socket.off('game_started');\n      }\n      socket.off('next_round');\n      socket.off('prompt_submitted');\n      socket.off('guess_submitted');\n      socket.off('round_ended');\n      socket.off('game_finished');\n      socket.off('timer_update');\n      socket.off('prompt_timer_update');\n    };\n  }, [socket, isPlaying]);\n  const isCurrentPlayerPromptGiver = () => {\n    console.log('🔍 Checking if current player is prompt giver:');\n    console.log('  currentPlayer:', currentPlayer);\n    console.log('  currentPlayer.id:', currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id);\n    console.log('  gameData.currentPromptGiver:', gameData.currentPromptGiver);\n    console.log('  socket.id:', socket.id);\n    console.log('  Match with currentPlayer.id:', currentPlayer && gameData.currentPromptGiver === currentPlayer.id);\n    console.log('  Match with socket.id:', gameData.currentPromptGiver === socket.id);\n\n    // Try both currentPlayer.id and socket.id\n    return gameData.currentPromptGiver === socket.id || currentPlayer && gameData.currentPromptGiver === currentPlayer.id;\n  };\n  const canStartGame = players.length >= 2;\n  const currentPlayerData = players.find(p => p.id === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id));\n  const isCurrentPlayerReady = (currentPlayerData === null || currentPlayerData === void 0 ? void 0 : currentPlayerData.isReady) || false;\n  const readyCount = players.filter(p => p.isReady).length;\n  if (!isPlaying) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Players: \", players.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ready: \", readyCount, \"/\", players.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n        players: players,\n        showReady: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), canStartGame && !allReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onToggleReady,\n        className: `ready-btn ${isCurrentPlayerReady ? 'ready' : 'not-ready'}`,\n        children: isCurrentPlayerReady ? 'Not Ready' : 'Ready'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), allReady && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"starting-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All players ready! Starting game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), !canStartGame && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"waiting-message\",\n        children: \"Waiting for at least 2 players to start...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room playing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Round \", gameData.round]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timer\",\n          children: [\"Time: \", gameData.timeRemaining, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: /*#__PURE__*/_jsxDEV(PlayerList, {\n          players: players,\n          showScores: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(0,0,0,0.3)',\n            padding: '10px',\n            marginBottom: '10px',\n            fontSize: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Game State: \", gameData.gameState]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Current Player: \", currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Is Prompt Giver: \", isCurrentPlayerPromptGiver() ? 'YES' : 'NO']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Round: \", gameData.round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Prompt Giver ID: \", gameData.currentPromptGiver]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), gameData.gameState === 'waiting_for_prompt' && isCurrentPlayerPromptGiver() && /*#__PURE__*/_jsxDEV(PromptInput, {\n          socket: socket,\n          roomId: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), gameData.gameState === 'waiting_for_prompt' && !isCurrentPlayerPromptGiver() && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waiting-prompt\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for prompt giver to submit their prompt...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), gameData.currentImage && /*#__PURE__*/_jsxDEV(GameImage, {\n          imageUrl: gameData.currentImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), gameData.gameState === 'round_results' && gameData.roundResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Round \", gameData.roundResults.round, \" Results\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"original-prompt\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Original Prompt: \\\"\", gameData.roundResults.originalPrompt, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guesses-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Guesses & Scores:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), ((_gameData$roundResult = gameData.roundResults.guesses) === null || _gameData$roundResult === void 0 ? void 0 : _gameData$roundResult.length) > 0 ? gameData.roundResults.guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `guess-result ${index === 0 ? 'best-guess' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guess-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"player-name\",\n                  children: [guess.playerName, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guess-text\",\n                  children: [\"\\\"\", guess.guess, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `score ${guess.score >= 80 ? 'excellent' : guess.score >= 60 ? 'good' : guess.score >= 40 ? 'okay' : 'poor'}`,\n                children: [guess.score, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-guesses\",\n              children: \"No guesses were submitted this round!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"next-round-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Next round starts in a few seconds...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), gameData.round < gameData.maxRounds && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Next prompt giver: \", (_players$find = players.find(p => p.id === gameData.currentPromptGiver)) === null || _players$find === void 0 ? void 0 : _players$find.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), gameData.gameState === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-finished\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Finished!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-scores\",\n            children: players.sort((a, b) => b.score - a.score).map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `final-score ${index === 0 ? 'winner' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [index + 1, \". \", player.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [player.score, \" points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [gameData.gameState === 'guessing' && !isCurrentPlayerPromptGiver() && /*#__PURE__*/_jsxDEV(GuessInput, {\n          socket: socket,\n          roomId: roomId,\n          timeRemaining: gameData.timeRemaining,\n          currentPlayer: currentPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), gameData.gameState === 'guessing' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guesses-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Guesses (\", guesses.length, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), guesses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guesses-container\",\n            children: guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"guess-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: [guess.playerName, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guess-text\",\n                children: guess.guess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-guesses\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No guesses yet...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Be the first to guess!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(GameRoom, \"FSKBogmuEbVBqmiz4ISpSet2aFk=\");\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","PromptInput","GuessInput","PlayerList","GameImage","jsxDEV","_jsxDEV","GameRoom","players","currentPlayer","roomId","onToggleReady","allReady","socket","isPlaying","initialGameData","onUpdatePlayers","_s","_gameData$roundResult","_players$find","gameData","setGameData","currentPromptGiver","currentImage","currentPrompt","timeRemaining","promptTimeRemaining","round","maxRounds","gameState","guesses","setGuesses","console","log","off","on","data","prev","roundResults","newGameData","imageUrl","newGuesses","Array","isArray","originalPrompt","isCurrentPlayerPromptGiver","id","canStartGame","length","currentPlayerData","find","p","isCurrentPlayerReady","isReady","readyCount","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","showReady","onClick","showScores","style","background","padding","marginBottom","fontSize","name","map","guess","index","playerName","score","sort","a","b","player","_c","$RefreshReg$"],"sources":["C:/Users/siddh/Desktop/Sid/Work/Co-curriculars/KiroHackathon/client/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PromptInput from './PromptInput';\r\nimport GuessInput from './GuessInput';\r\nimport PlayerList from './PlayerList';\r\nimport GameImage from './GameImage';\r\n\r\nfunction GameRoom({ players, currentPlayer, roomId, onToggleReady, allReady, socket, isPlaying = false, initialGameData = null, onUpdatePlayers }) {\r\n  const [gameData, setGameData] = useState(initialGameData || {\r\n    currentPromptGiver: null,\r\n    currentImage: '',\r\n    currentPrompt: '',\r\n    timeRemaining: 30,\r\n    promptTimeRemaining: 30,\r\n    round: 0,\r\n    maxRounds: 5,\r\n    gameState: 'waiting'\r\n  });\r\n  const [guesses, setGuesses] = useState([]);\r\n\r\n  // Update game data when initial data is provided\r\n  useEffect(() => {\r\n    if (initialGameData) {\r\n      console.log('Setting initial game data:', initialGameData);\r\n      setGameData(initialGameData);\r\n    }\r\n  }, [initialGameData]);\r\n\r\n  useEffect(() => {\r\n    console.log('GameRoom useEffect - isPlaying:', isPlaying);\r\n    \r\n    // Clean up listeners (but NOT game_started unless we're playing)\r\n    socket.off('next_round');\r\n    socket.off('prompt_submitted');\r\n    socket.off('guess_submitted');\r\n    socket.off('round_ended');\r\n    socket.off('game_finished');\r\n    socket.off('timer_update');\r\n\r\n    // Only register game_started listener if we're actually playing\r\n    if (isPlaying) {\r\n      console.log('GameRoom: Registering game_started listener');\r\n      // Only clean up game_started if we're going to register it\r\n      socket.off('game_started');\r\n      \r\n      socket.on('game_started', (data) => {\r\n        console.log('GameRoom received game_started:', data);\r\n        setGameData(prev => ({\r\n          ...prev,\r\n          currentPromptGiver: data.currentPromptGiver,\r\n          round: data.round,\r\n          gameState: 'waiting_for_prompt'\r\n        }));\r\n      });\r\n    } else {\r\n      console.log('GameRoom: NOT registering game_started listener (not playing)');\r\n    }\r\n\r\n    socket.on('next_round', (data) => {\r\n\r\n      \r\n      // Update players with current scores\r\n      if (onUpdatePlayers && data.players) {\r\n\r\n        onUpdatePlayers(data.players);\r\n      }\r\n      \r\n      setGameData(prev => ({\r\n        ...prev,\r\n        currentPromptGiver: data.currentPromptGiver,\r\n        round: data.round,\r\n        maxRounds: data.maxRounds,\r\n        gameState: data.gameState,\r\n        currentImage: '',\r\n        currentPrompt: '',\r\n        timeRemaining: 30,\r\n        roundResults: null\r\n      }));\r\n      setGuesses([]);\r\n    });\r\n\r\n    socket.on('prompt_submitted', (data) => {\r\n      console.log('Prompt submitted event received:', data);\r\n      setGameData(prev => {\r\n        const newGameData = {\r\n          ...prev,\r\n          currentImage: data.imageUrl,\r\n          gameState: 'guessing',\r\n          timeRemaining: data.timeRemaining || 30\r\n        };\r\n        console.log('Updated game data:', newGameData);\r\n        return newGameData;\r\n      });\r\n    });\r\n\r\n    socket.on('guess_submitted', (data) => {\r\n      console.log('Guess submitted event received:', data);\r\n      setGuesses(prev => {\r\n        const newGuesses = [...prev, data];\r\n        console.log('Updated guesses:', newGuesses);\r\n        return newGuesses;\r\n      });\r\n    });\r\n\r\n    socket.on('round_ended', (data) => {\r\n      console.log('Round ended:', data);\r\n      console.log('Players with updated scores:', data.players);\r\n      console.log('Guesses received:', data.guesses);\r\n      console.log('Guesses type:', typeof data.guesses);\r\n      console.log('Guesses is array:', Array.isArray(data.guesses));\r\n      \r\n      // Update players with new scores\r\n      if (onUpdatePlayers && data.players) {\r\n        onUpdatePlayers(data.players);\r\n      }\r\n      \r\n      setGameData(prev => ({\r\n        ...prev,\r\n        currentPrompt: data.originalPrompt,\r\n        gameState: 'round_results',\r\n        roundResults: {\r\n          ...data,\r\n          guesses: data.guesses || [] // Ensure it's always an array\r\n        }\r\n      }));\r\n    });\r\n\r\n    socket.on('game_finished', (data) => {\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        gameState: 'finished'\r\n      }));\r\n    });\r\n\r\n    socket.on('timer_update', (data) => {\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        timeRemaining: data.timeRemaining\r\n      }));\r\n    });\r\n\r\n    socket.on('prompt_timer_update', (data) => {\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        promptTimeRemaining: data.timeRemaining\r\n      }));\r\n    });\r\n\r\n    return () => {\r\n      console.log('GameRoom cleanup - isPlaying:', isPlaying);\r\n      // Only clean up game_started if we registered it (when isPlaying is true)\r\n      if (isPlaying) {\r\n        socket.off('game_started');\r\n      }\r\n      socket.off('next_round');\r\n      socket.off('prompt_submitted');\r\n      socket.off('guess_submitted');\r\n      socket.off('round_ended');\r\n      socket.off('game_finished');\r\n      socket.off('timer_update');\r\n      socket.off('prompt_timer_update');\r\n    };\r\n  }, [socket, isPlaying]);\r\n\r\n  const isCurrentPlayerPromptGiver = () => {\r\n    console.log('🔍 Checking if current player is prompt giver:');\r\n    console.log('  currentPlayer:', currentPlayer);\r\n    console.log('  currentPlayer.id:', currentPlayer?.id);\r\n    console.log('  gameData.currentPromptGiver:', gameData.currentPromptGiver);\r\n    console.log('  socket.id:', socket.id);\r\n    console.log('  Match with currentPlayer.id:', currentPlayer && gameData.currentPromptGiver === currentPlayer.id);\r\n    console.log('  Match with socket.id:', gameData.currentPromptGiver === socket.id);\r\n    \r\n    // Try both currentPlayer.id and socket.id\r\n    return gameData.currentPromptGiver === socket.id || (currentPlayer && gameData.currentPromptGiver === currentPlayer.id);\r\n  };\r\n\r\n  const canStartGame = players.length >= 2;\r\n  const currentPlayerData = players.find(p => p.id === currentPlayer?.id);\r\n  const isCurrentPlayerReady = currentPlayerData?.isReady || false;\r\n  const readyCount = players.filter(p => p.isReady).length;\r\n\r\n  if (!isPlaying) {\r\n    return (\r\n      <div className=\"game-room\">\r\n        <div className=\"room-header\">\r\n          <h2>Room: {roomId}</h2>\r\n          <p>Players: {players.length}</p>\r\n          <p>Ready: {readyCount}/{players.length}</p>\r\n        </div>\r\n        \r\n        <PlayerList players={players} showReady={true} />\r\n        \r\n        {canStartGame && !allReady && (\r\n          <button \r\n            onClick={onToggleReady} \r\n            className={`ready-btn ${isCurrentPlayerReady ? 'ready' : 'not-ready'}`}\r\n          >\r\n            {isCurrentPlayerReady ? 'Not Ready' : 'Ready'}\r\n          </button>\r\n        )}\r\n        \r\n        {allReady && (\r\n          <div className=\"starting-message\">\r\n            <p>All players ready! Starting game...</p>\r\n            <div className=\"loading-spinner\"></div>\r\n          </div>\r\n        )}\r\n        \r\n        {!canStartGame && (\r\n          <p className=\"waiting-message\">\r\n            Waiting for at least 2 players to start...\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-room playing\">\r\n      <div className=\"game-header\">\r\n        <div className=\"round-info\">\r\n          <span>Round {gameData.round}</span>\r\n          <span className=\"timer\">Time: {gameData.timeRemaining}s</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"game-content\">\r\n        <div className=\"left-panel\">\r\n          <PlayerList players={players} showScores={true} />\r\n        </div>\r\n        \r\n        <div className=\"center-panel\">\r\n          {/* Debug info */}\r\n          <div style={{background: 'rgba(0,0,0,0.3)', padding: '10px', marginBottom: '10px', fontSize: '8px'}}>\r\n            <div>Game State: {gameData.gameState}</div>\r\n            <div>Current Player: {currentPlayer?.name}</div>\r\n            <div>Is Prompt Giver: {isCurrentPlayerPromptGiver() ? 'YES' : 'NO'}</div>\r\n            <div>Round: {gameData.round}</div>\r\n            <div>Prompt Giver ID: {gameData.currentPromptGiver}</div>\r\n          </div>\r\n          \r\n          {gameData.gameState === 'waiting_for_prompt' && isCurrentPlayerPromptGiver() && (\r\n            <PromptInput socket={socket} roomId={roomId} />\r\n          )}\r\n          \r\n          {gameData.gameState === 'waiting_for_prompt' && !isCurrentPlayerPromptGiver() && (\r\n            <div className=\"waiting-prompt\">\r\n              <p>Waiting for prompt giver to submit their prompt...</p>\r\n            </div>\r\n          )}\r\n          \r\n          {gameData.currentImage && (\r\n            <GameImage imageUrl={gameData.currentImage} />\r\n          )}\r\n          \r\n          {gameData.gameState === 'round_results' && gameData.roundResults && (\r\n            <div className=\"round-results\">\r\n              <h3>Round {gameData.roundResults.round} Results</h3>\r\n              <div className=\"original-prompt\">\r\n                <h4>Original Prompt: \"{gameData.roundResults.originalPrompt}\"</h4>\r\n              </div>\r\n              \r\n              <div className=\"guesses-results\">\r\n                <h4>Guesses & Scores:</h4>\r\n                {gameData.roundResults.guesses?.length > 0 ? (\r\n                  gameData.roundResults.guesses.map((guess, index) => (\r\n                    <div key={index} className={`guess-result ${index === 0 ? 'best-guess' : ''}`}>\r\n                      <span className=\"guess-content\">\r\n                        <span className=\"player-name\">{guess.playerName}:</span>\r\n                        <span className=\"guess-text\">\"{guess.guess}\"</span>\r\n                      </span>\r\n                      <span className={`score ${guess.score >= 80 ? 'excellent' : guess.score >= 60 ? 'good' : guess.score >= 40 ? 'okay' : 'poor'}`}>\r\n                        {guess.score}%\r\n                      </span>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"no-guesses\">No guesses were submitted this round!</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"next-round-info\">\r\n                <p>Next round starts in a few seconds...</p>\r\n                {gameData.round < gameData.maxRounds && (\r\n                  <p>Next prompt giver: {players.find(p => p.id === gameData.currentPromptGiver)?.name}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {gameData.gameState === 'finished' && (\r\n            <div className=\"game-finished\">\r\n              <h2>Game Finished!</h2>\r\n              <div className=\"final-scores\">\r\n                {players\r\n                  .sort((a, b) => b.score - a.score)\r\n                  .map((player, index) => (\r\n                    <div key={player.id} className={`final-score ${index === 0 ? 'winner' : ''}`}>\r\n                      <span>{index + 1}. {player.name}</span>\r\n                      <span>{player.score} points</span>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"right-panel\">\r\n          {gameData.gameState === 'guessing' && !isCurrentPlayerPromptGiver() && (\r\n            <GuessInput \r\n              socket={socket} \r\n              roomId={roomId} \r\n              timeRemaining={gameData.timeRemaining}\r\n              currentPlayer={currentPlayer}\r\n            />\r\n          )}\r\n          \r\n          {gameData.gameState === 'guessing' && (\r\n            <div className=\"guesses-list\">\r\n              <h4>Guesses ({guesses.length}):</h4>\r\n              {guesses.length > 0 ? (\r\n                <div className=\"guesses-container\">\r\n                  {guesses.map((guess, index) => (\r\n                    <div key={index} className=\"guess-item\">\r\n                      <span className=\"player-name\">{guess.playerName}:</span>\r\n                      <span className=\"guess-text\">{guess.guess}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"no-guesses\">\r\n                  <p>No guesses yet...</p>\r\n                  <p>Be the first to guess!</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}