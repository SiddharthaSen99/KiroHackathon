{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\Sid\\\\Work\\\\Co-curriculars\\\\KiroHackathon\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport GameLobby from './components/GameLobby';\nimport GameRoom from './components/GameRoom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('lobby'); // lobby, room, playing\n  const [playerName, setPlayerName] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [allReady, setAllReady] = useState(false);\n  useEffect(() => {\n    socket.on('room_update', data => {\n      console.log('Room update received:', data);\n      setPlayers(data.players);\n      setAllReady(data.allReady || false);\n      // Only set to room state if we're not already playing\n      if (gameState !== 'playing') {\n        setGameState('room');\n      }\n    });\n    socket.on('game_started', data => {\n      console.log('Received game_started event:', data);\n      setGameState('playing');\n      setPlayers(data.players);\n      console.log('Set game state to playing');\n    });\n    return () => {\n      socket.off('room_update');\n      socket.off('game_started');\n    };\n  }, [gameState]);\n  const joinRoom = (name, room) => {\n    setPlayerName(name);\n    setRoomId(room);\n    setCurrentPlayer({\n      id: socket.id,\n      name\n    });\n    socket.emit('join_room', {\n      roomId: room,\n      playerName: name\n    });\n  };\n  const toggleReady = () => {\n    console.log('Toggle Ready clicked! Room ID:', roomId);\n    console.log('Socket connected:', socket.connected);\n    console.log('Socket ID:', socket.id);\n    socket.emit('toggle_ready', {\n      roomId\n    });\n    console.log('Emitted toggle_ready event');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Prompt Guesser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          background: 'rgba(0,0,0,0.3)',\n          padding: '5px'\n        },\n        children: [\"App State: \", gameState, \" | Players: \", players.length, \" | Room: \", roomId, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _players$;\n            setGameState('playing');\n            // Simulate the game_started event data\n            const fakeGameData = {\n              currentPromptGiver: ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id) || socket.id,\n              players: players.map(p => {\n                var _players$2;\n                return {\n                  ...p,\n                  isPromptGiver: p.id === (((_players$2 = players[0]) === null || _players$2 === void 0 ? void 0 : _players$2.id) || socket.id)\n                };\n              }),\n              round: 1\n            };\n            // Manually trigger the game_started event\n            socket.emit('fake_game_started', fakeGameData);\n          },\n          style: {\n            marginLeft: '10px',\n            fontSize: '10px'\n          },\n          children: \"Force Start (Debug)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), gameState === 'lobby' && /*#__PURE__*/_jsxDEV(GameLobby, {\n      onJoinRoom: joinRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), gameState === 'room' && /*#__PURE__*/_jsxDEV(GameRoom, {\n      players: players,\n      currentPlayer: currentPlayer,\n      roomId: roomId,\n      onStartGame: startGame,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(GameRoom, {\n      players: players,\n      currentPlayer: currentPlayer,\n      roomId: roomId,\n      socket: socket,\n      isPlaying: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oPf9aRB7ZWTAq7isZDGZ1x06tbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","GameLobby","GameRoom","jsxDEV","_jsxDEV","socket","App","_s","gameState","setGameState","playerName","setPlayerName","roomId","setRoomId","players","setPlayers","currentPlayer","setCurrentPlayer","allReady","setAllReady","on","data","console","log","off","joinRoom","name","room","id","emit","toggleReady","connected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","background","padding","length","onClick","_players$","fakeGameData","currentPromptGiver","map","p","_players$2","isPromptGiver","round","marginLeft","onJoinRoom","onStartGame","startGame","isPlaying","_c","$RefreshReg$"],"sources":["C:/Users/siddh/Desktop/Sid/Work/Co-curriculars/KiroHackathon/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport GameLobby from './components/GameLobby';\r\nimport GameRoom from './components/GameRoom';\r\nimport './App.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('lobby'); // lobby, room, playing\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [allReady, setAllReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on('room_update', (data) => {\r\n      console.log('Room update received:', data);\r\n      setPlayers(data.players);\r\n      setAllReady(data.allReady || false);\r\n      // Only set to room state if we're not already playing\r\n      if (gameState !== 'playing') {\r\n        setGameState('room');\r\n      }\r\n    });\r\n\r\n    socket.on('game_started', (data) => {\r\n      console.log('Received game_started event:', data);\r\n      setGameState('playing');\r\n      setPlayers(data.players);\r\n      console.log('Set game state to playing');\r\n    });\r\n\r\n    return () => {\r\n      socket.off('room_update');\r\n      socket.off('game_started');\r\n    };\r\n  }, [gameState]);\r\n\r\n  const joinRoom = (name, room) => {\r\n    setPlayerName(name);\r\n    setRoomId(room);\r\n    setCurrentPlayer({ id: socket.id, name });\r\n    socket.emit('join_room', { roomId: room, playerName: name });\r\n  };\r\n\r\n  const toggleReady = () => {\r\n    console.log('Toggle Ready clicked! Room ID:', roomId);\r\n    console.log('Socket connected:', socket.connected);\r\n    console.log('Socket ID:', socket.id);\r\n    socket.emit('toggle_ready', { roomId });\r\n    console.log('Emitted toggle_ready event');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>AI Prompt Guesser</h1>\r\n        {/* Debug info */}\r\n        <div style={{fontSize: '12px', background: 'rgba(0,0,0,0.3)', padding: '5px'}}>\r\n          App State: {gameState} | Players: {players.length} | Room: {roomId}\r\n          <button onClick={() => {\r\n            setGameState('playing');\r\n            // Simulate the game_started event data\r\n            const fakeGameData = {\r\n              currentPromptGiver: players[0]?.id || socket.id,\r\n              players: players.map(p => ({...p, isPromptGiver: p.id === (players[0]?.id || socket.id)})),\r\n              round: 1\r\n            };\r\n            // Manually trigger the game_started event\r\n            socket.emit('fake_game_started', fakeGameData);\r\n          }} style={{marginLeft: '10px', fontSize: '10px'}}>\r\n            Force Start (Debug)\r\n          </button>\r\n        </div>\r\n      </header>\r\n      \r\n      {gameState === 'lobby' && (\r\n        <GameLobby onJoinRoom={joinRoom} />\r\n      )}\r\n      \r\n      {gameState === 'room' && (\r\n        <GameRoom \r\n          players={players}\r\n          currentPlayer={currentPlayer}\r\n          roomId={roomId}\r\n          onStartGame={startGame}\r\n          socket={socket}\r\n        />\r\n      )}\r\n      \r\n      {gameState === 'playing' && (\r\n        <GameRoom \r\n          players={players}\r\n          currentPlayer={currentPlayer}\r\n          roomId={roomId}\r\n          socket={socket}\r\n          isPlaying={true}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}