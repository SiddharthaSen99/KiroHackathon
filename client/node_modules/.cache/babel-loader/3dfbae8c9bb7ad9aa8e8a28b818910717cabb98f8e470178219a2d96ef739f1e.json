{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\Sid\\\\Work\\\\Co-curriculars\\\\KiroHackathon\\\\client\\\\src\\\\components\\\\PromptInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PromptInput({\n  socket,\n  roomId\n}) {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const maxChars = 20;\n  useEffect(() => {\n    socket.on('prompt_timer_update', data => {\n      setTimeRemaining(data.timeRemaining);\n    });\n    socket.on('prompt_submitted', () => {\n      setIsSubmitting(false);\n    });\n    return () => {\n      socket.off('prompt_timer_update');\n      socket.off('prompt_submitted');\n    };\n  }, [socket]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (prompt.length > maxChars) {\n      alert(`Prompt must be ${maxChars} characters or less!`);\n      return;\n    }\n    if (prompt.trim()) {\n      setIsSubmitting(true);\n      socket.emit('submit_prompt', {\n        roomId,\n        prompt: prompt.trim()\n      });\n    }\n  };\n  const isOverLimit = prompt.length > maxChars;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your turn to create a prompt!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Create a prompt for the AI to generate an image (max \", maxWords, \" words)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Enter your prompt here...\",\n          disabled: isSubmitting,\n          rows: 3,\n          maxLength: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `word-count ${isOverLimit ? 'over-limit' : ''}`,\n          children: [wordCount, \"/\", maxWords, \" words\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !prompt.trim() || isOverLimit || isSubmitting,\n        className: \"submit-prompt-btn\",\n        children: isSubmitting ? 'Generating Image...' : 'Submit Prompt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt-tips\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tips for good prompts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Be descriptive but concise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Include objects, colors, or settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Avoid overly abstract concepts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Think about what would be fun to guess!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PromptInput, \"nI6RrSo3ULTpT38MLMBHS8Wc+3I=\");\n_c = PromptInput;\nexport default PromptInput;\nvar _c;\n$RefreshReg$(_c, \"PromptInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PromptInput","socket","roomId","_s","prompt","setPrompt","isSubmitting","setIsSubmitting","timeRemaining","setTimeRemaining","maxChars","on","data","off","handleSubmit","e","preventDefault","length","alert","trim","emit","isOverLimit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWords","onSubmit","value","onChange","target","placeholder","disabled","rows","maxLength","wordCount","type","_c","$RefreshReg$"],"sources":["C:/Users/siddh/Desktop/Sid/Work/Co-curriculars/KiroHackathon/client/src/components/PromptInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction PromptInput({ socket, roomId }) {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [timeRemaining, setTimeRemaining] = useState(30);\r\n  const maxChars = 20;\r\n\r\n  useEffect(() => {\r\n    socket.on('prompt_timer_update', (data) => {\r\n      setTimeRemaining(data.timeRemaining);\r\n    });\r\n\r\n    socket.on('prompt_submitted', () => {\r\n      setIsSubmitting(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('prompt_timer_update');\r\n      socket.off('prompt_submitted');\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (prompt.length > maxChars) {\r\n      alert(`Prompt must be ${maxChars} characters or less!`);\r\n      return;\r\n    }\r\n    \r\n    if (prompt.trim()) {\r\n      setIsSubmitting(true);\r\n      socket.emit('submit_prompt', { roomId, prompt: prompt.trim() });\r\n    }\r\n  };\r\n\r\n  const isOverLimit = prompt.length > maxChars;\r\n\r\n  return (\r\n    <div className=\"prompt-input-container\">\r\n      <h3>Your turn to create a prompt!</h3>\r\n      <p>Create a prompt for the AI to generate an image (max {maxWords} words)</p>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Enter your prompt here...\"\r\n            disabled={isSubmitting}\r\n            rows={3}\r\n            maxLength={100}\r\n          />\r\n          <div className={`word-count ${isOverLimit ? 'over-limit' : ''}`}>\r\n            {wordCount}/{maxWords} words\r\n          </div>\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          disabled={!prompt.trim() || isOverLimit || isSubmitting}\r\n          className=\"submit-prompt-btn\"\r\n        >\r\n          {isSubmitting ? 'Generating Image...' : 'Submit Prompt'}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"prompt-tips\">\r\n        <h4>Tips for good prompts:</h4>\r\n        <ul>\r\n          <li>Be descriptive but concise</li>\r\n          <li>Include objects, colors, or settings</li>\r\n          <li>Avoid overly abstract concepts</li>\r\n          <li>Think about what would be fun to guess!</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}