{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\Sid\\\\Work\\\\Co-curriculars\\\\KiroHackathon\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport GameLobby from './components/GameLobby';\nimport GameRoom from './components/GameRoom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('lobby'); // lobby, room, playing\n  const [roomId, setRoomId] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [allReady, setAllReady] = useState(false);\n  const [gameData, setGameData] = useState(null);\n  useEffect(() => {\n    console.log('Setting up socket listeners in App.js');\n    console.log('Socket connected:', socket.connected);\n    console.log('Socket ID:', socket.id);\n\n    // Clean up any existing listeners first\n    socket.off('room_update');\n    socket.off('game_started');\n    socket.on('room_update', data => {\n      console.log('Room update received:', data);\n      setPlayers(data.players);\n      setAllReady(data.allReady || false);\n\n      // Update game data if we're playing and have currentPromptGiver info\n      if (data.currentPromptGiver) {\n        setGameData(prevGameData => prevGameData ? {\n          ...prevGameData,\n          currentPromptGiver: data.currentPromptGiver\n        } : null);\n      }\n\n      // Only set to room state if we're not already playing\n      setGameState(currentState => {\n        console.log('Current state in room_update:', currentState);\n        if (currentState !== 'playing') {\n          console.log('Setting state to room');\n          return 'room';\n        }\n        return currentState;\n      });\n    });\n    socket.on('game_started', data => {\n      console.log('ðŸŽ® GAME_STARTED EVENT RECEIVED IN APP.JS:', data);\n      console.log('About to set game state to playing');\n      setGameState('playing');\n      setPlayers(data.players);\n      setGameData({\n        currentPromptGiver: data.currentPromptGiver,\n        round: data.round,\n        gameState: data.gameState || 'waiting_for_prompt',\n        timeRemaining: 60,\n        promptTimeRemaining: 30\n      });\n      console.log('âœ… Set game state to playing');\n    });\n\n    // Add a test listener to see if ANY events are being received\n    socket.onAny((eventName, ...args) => {\n      console.log('ðŸ“¡ Received event:', eventName, args);\n    });\n    return () => {\n      console.log('Cleaning up socket listeners in App.js');\n      socket.off('room_update');\n      socket.off('game_started');\n      socket.offAny();\n    };\n  }, []); // Remove gameState dependency\n\n  const joinRoom = (name, room) => {\n    setRoomId(room);\n    setCurrentPlayer({\n      id: socket.id,\n      name\n    });\n    socket.emit('join_room', {\n      roomId: room,\n      playerName: name\n    });\n  };\n  const toggleReady = () => {\n    console.log('Toggle Ready clicked! Room ID:', roomId);\n    console.log('Socket connected:', socket.connected);\n    console.log('Socket ID:', socket.id);\n    socket.emit('toggle_ready', {\n      roomId\n    });\n    console.log('Emitted toggle_ready event');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Prompt Guesser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          background: 'rgba(0,0,0,0.3)',\n          padding: '5px'\n        },\n        children: [\"App State: \", gameState, \" | Players: \", players.length, \" | Room: \", roomId, \" | All Ready: \", allReady ? 'YES' : 'NO']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), gameState === 'lobby' && /*#__PURE__*/_jsxDEV(GameLobby, {\n      onJoinRoom: joinRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), gameState === 'room' && /*#__PURE__*/_jsxDEV(GameRoom, {\n      players: players,\n      currentPlayer: currentPlayer,\n      roomId: roomId,\n      onToggleReady: toggleReady,\n      allReady: allReady,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(GameRoom, {\n      players: players,\n      currentPlayer: currentPlayer,\n      roomId: roomId,\n      socket: socket,\n      isPlaying: true,\n      initialGameData: gameData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z2bKGeaKt/sbnuXQYWWQ12YH8sI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","GameLobby","GameRoom","jsxDEV","_jsxDEV","socket","App","_s","gameState","setGameState","roomId","setRoomId","players","setPlayers","currentPlayer","setCurrentPlayer","allReady","setAllReady","gameData","setGameData","console","log","connected","id","off","on","data","currentPromptGiver","prevGameData","currentState","round","timeRemaining","promptTimeRemaining","onAny","eventName","args","offAny","joinRoom","name","room","emit","playerName","toggleReady","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","background","padding","length","onJoinRoom","onToggleReady","isPlaying","initialGameData","_c","$RefreshReg$"],"sources":["C:/Users/siddh/Desktop/Sid/Work/Co-curriculars/KiroHackathon/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport GameLobby from './components/GameLobby';\r\nimport GameRoom from './components/GameRoom';\r\nimport './App.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('lobby'); // lobby, room, playing\r\n  const [roomId, setRoomId] = useState('');\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [allReady, setAllReady] = useState(false);\r\n  const [gameData, setGameData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Setting up socket listeners in App.js');\r\n    console.log('Socket connected:', socket.connected);\r\n    console.log('Socket ID:', socket.id);\r\n    \r\n    // Clean up any existing listeners first\r\n    socket.off('room_update');\r\n    socket.off('game_started');\r\n\r\n    socket.on('room_update', (data) => {\r\n      console.log('Room update received:', data);\r\n      setPlayers(data.players);\r\n      setAllReady(data.allReady || false);\r\n      \r\n      // Update game data if we're playing and have currentPromptGiver info\r\n      if (data.currentPromptGiver) {\r\n        setGameData(prevGameData => prevGameData ? {\r\n          ...prevGameData,\r\n          currentPromptGiver: data.currentPromptGiver\r\n        } : null);\r\n      }\r\n      \r\n      // Only set to room state if we're not already playing\r\n      setGameState(currentState => {\r\n        console.log('Current state in room_update:', currentState);\r\n        if (currentState !== 'playing') {\r\n          console.log('Setting state to room');\r\n          return 'room';\r\n        }\r\n        return currentState;\r\n      });\r\n    });\r\n\r\n    socket.on('game_started', (data) => {\r\n      console.log('ðŸŽ® GAME_STARTED EVENT RECEIVED IN APP.JS:', data);\r\n      console.log('About to set game state to playing');\r\n      setGameState('playing');\r\n      setPlayers(data.players);\r\n      setGameData({\r\n        currentPromptGiver: data.currentPromptGiver,\r\n        round: data.round,\r\n        gameState: data.gameState || 'waiting_for_prompt',\r\n        timeRemaining: 60,\r\n        promptTimeRemaining: 30\r\n      });\r\n      console.log('âœ… Set game state to playing');\r\n    });\r\n\r\n    // Add a test listener to see if ANY events are being received\r\n    socket.onAny((eventName, ...args) => {\r\n      console.log('ðŸ“¡ Received event:', eventName, args);\r\n    });\r\n\r\n    return () => {\r\n      console.log('Cleaning up socket listeners in App.js');\r\n      socket.off('room_update');\r\n      socket.off('game_started');\r\n      socket.offAny();\r\n    };\r\n  }, []); // Remove gameState dependency\r\n\r\n  const joinRoom = (name, room) => {\r\n    setRoomId(room);\r\n    setCurrentPlayer({ id: socket.id, name });\r\n    socket.emit('join_room', { roomId: room, playerName: name });\r\n  };\r\n\r\n  const toggleReady = () => {\r\n    console.log('Toggle Ready clicked! Room ID:', roomId);\r\n    console.log('Socket connected:', socket.connected);\r\n    console.log('Socket ID:', socket.id);\r\n    socket.emit('toggle_ready', { roomId });\r\n    console.log('Emitted toggle_ready event');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>AI Prompt Guesser</h1>\r\n        {/* Debug info */}\r\n        <div style={{fontSize: '12px', background: 'rgba(0,0,0,0.3)', padding: '5px'}}>\r\n          App State: {gameState} | Players: {players.length} | Room: {roomId} | All Ready: {allReady ? 'YES' : 'NO'}\r\n        </div>\r\n      </header>\r\n      \r\n      {gameState === 'lobby' && (\r\n        <GameLobby onJoinRoom={joinRoom} />\r\n      )}\r\n      \r\n      {gameState === 'room' && (\r\n        <GameRoom \r\n          players={players}\r\n          currentPlayer={currentPlayer}\r\n          roomId={roomId}\r\n          onToggleReady={toggleReady}\r\n          allReady={allReady}\r\n          socket={socket}\r\n        />\r\n      )}\r\n      \r\n      {gameState === 'playing' && (\r\n        <GameRoom \r\n          players={players}\r\n          currentPlayer={currentPlayer}\r\n          roomId={roomId}\r\n          socket={socket}\r\n          isPlaying={true}\r\n          initialGameData={gameData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}