{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\Sid\\\\Work\\\\Co-curriculars\\\\KiroHackathon\\\\client\\\\src\\\\components\\\\GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PromptInput from './PromptInput';\nimport GuessInput from './GuessInput';\nimport PlayerList from './PlayerList';\nimport GameImage from './GameImage';\nimport soundManager from '../utils/soundManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameRoom({\n  players,\n  spectators = [],\n  currentPlayer,\n  roomId,\n  onToggleReady,\n  allReady,\n  socket,\n  isPlaying = false,\n  initialGameData = null,\n  onUpdatePlayers,\n  isSpectator = false\n}) {\n  _s();\n  var _gameData$roundResult, _players$find;\n  const [gameData, setGameData] = useState(initialGameData || {\n    currentPromptGiver: null,\n    currentImage: '',\n    currentPrompt: '',\n    timeRemaining: 30,\n    promptTimeRemaining: 30,\n    round: 0,\n    maxRounds: 5,\n    gameState: 'waiting',\n    currentTurnIndex: 0,\n    turnsCompletedInRound: 0,\n    totalPlayersInRound: (players === null || players === void 0 ? void 0 : players.length) || 0\n  });\n  const [guesses, setGuesses] = useState([]);\n  const [maxRounds, setMaxRounds] = useState(5);\n\n  // Update game data when initial data is provided\n  useEffect(() => {\n    if (initialGameData) {\n      setGameData(prev => ({\n        ...prev,\n        ...initialGameData\n      }));\n    }\n  }, [initialGameData]);\n  useEffect(() => {\n    // Clean up listeners (but NOT game_started unless we're playing)\n    socket.off('next_turn');\n    socket.off('prompt_submitted');\n    socket.off('guess_submitted');\n    socket.off('round_ended');\n    socket.off('game_finished');\n    socket.off('timer_update');\n\n    // Only register game_started listener if we're actually playing\n    if (isPlaying) {\n      // Only clean up game_started if we're going to register it\n      socket.off('game_started');\n      socket.on('game_started', data => {\n        soundManager.playGameStart();\n        setGameData(prev => ({\n          ...prev,\n          currentPromptGiver: data.currentPromptGiver,\n          round: data.round,\n          gameState: 'waiting_for_prompt',\n          currentTurnIndex: data.currentTurnIndex,\n          turnsCompletedInRound: data.turnsCompletedInRound,\n          totalPlayersInRound: data.totalPlayersInRound\n        }));\n      });\n    }\n    socket.on('room_update', data => {\n      if (data.maxRounds !== undefined) {\n        setMaxRounds(data.maxRounds);\n        setGameData(prev => ({\n          ...prev,\n          maxRounds: data.maxRounds\n        }));\n      }\n    });\n    socket.on('next_turn', data => {\n      // Update players with current scores\n      if (onUpdatePlayers && data.players) {\n        onUpdatePlayers(data.players);\n      }\n      setGameData(prev => ({\n        ...prev,\n        currentPromptGiver: data.currentPromptGiver,\n        round: data.round,\n        maxRounds: data.maxRounds,\n        gameState: data.gameState,\n        currentImage: '',\n        currentPrompt: '',\n        timeRemaining: 30,\n        roundResults: null,\n        currentTurnIndex: data.currentTurnIndex,\n        turnsCompletedInRound: data.turnsCompletedInRound,\n        totalPlayersInRound: data.totalPlayersInRound\n      }));\n      setGuesses([]);\n    });\n    socket.on('prompt_submitted', data => {\n      soundManager.playPromptSubmitted();\n      setGameData(prev => ({\n        ...prev,\n        currentImage: data.imageUrl,\n        gameState: 'guessing',\n        timeRemaining: data.timeRemaining || 30\n      }));\n    });\n    socket.on('guess_submitted', data => {\n      soundManager.playGuessSubmitted();\n      setGuesses(prev => [...prev, data]);\n    });\n    socket.on('round_ended', data => {\n      soundManager.playRoundEnd();\n      // Update players with new scores\n      if (onUpdatePlayers && data.players) {\n        onUpdatePlayers(data.players);\n      }\n      setGameData(prev => ({\n        ...prev,\n        currentPrompt: data.originalPrompt,\n        gameState: 'round_results',\n        roundResults: {\n          ...data,\n          guesses: data.guesses || [] // Ensure it's always an array\n        }\n      }));\n    });\n    socket.on('game_finished', data => {\n      soundManager.playGameEnd();\n      setGameData(prev => ({\n        ...prev,\n        gameState: 'finished'\n      }));\n    });\n    socket.on('timer_update', data => {\n      setGameData(prev => ({\n        ...prev,\n        timeRemaining: data.timeRemaining\n      }));\n    });\n    socket.on('prompt_timer_update', data => {\n      setGameData(prev => ({\n        ...prev,\n        promptTimeRemaining: data.timeRemaining\n      }));\n    });\n    return () => {\n      // Only clean up game_started if we registered it (when isPlaying is true)\n      if (isPlaying) {\n        socket.off('game_started');\n      }\n      socket.off('next_turn');\n      socket.off('prompt_submitted');\n      socket.off('guess_submitted');\n      socket.off('round_ended');\n      socket.off('game_finished');\n      socket.off('timer_update');\n      socket.off('prompt_timer_update');\n    };\n  }, [socket, isPlaying]);\n  const isCurrentPlayerPromptGiver = () => {\n    // Try both currentPlayer.id and socket.id\n    return gameData.currentPromptGiver === socket.id || currentPlayer && gameData.currentPromptGiver === currentPlayer.id;\n  };\n  const canStartGame = players.length >= 2;\n  const currentPlayerData = players.find(p => p.id === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id));\n  const isCurrentPlayerReady = (currentPlayerData === null || currentPlayerData === void 0 ? void 0 : currentPlayerData.isReady) || false;\n  const readyCount = players.filter(p => p.isReady).length;\n  if (!isPlaying) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Players: \", players.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), spectators.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Spectators: \", spectators.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ready: \", readyCount, \"/\", players.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n        players: players,\n        spectators: spectators,\n        showReady: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), !isSpectator && canStartGame && !allReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onToggleReady,\n        className: `ready-btn ${isCurrentPlayerReady ? 'ready' : 'not-ready'}`,\n        children: isCurrentPlayerReady ? 'Not Ready' : 'Ready'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), isSpectator && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spectator-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDC41\\uFE0F You are watching as a spectator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting for players to start the game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), allReady && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"starting-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All players ready! Starting game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), !canStartGame && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"waiting-message\",\n        children: \"Waiting for at least 2 players to start...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room playing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Round \", gameData.round, \" of \", gameData.maxRounds, gameData.totalPlayersInRound > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"turn-info\",\n            children: [\" - Turn \", (gameData.turnsCompletedInRound || 0) + 1, \" of \", gameData.totalPlayersInRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timer\",\n          children: [\"Time: \", gameData.timeRemaining, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sound-toggle ${soundManager.isEnabled() ? 'enabled' : 'disabled'}`,\n          onClick: () => soundManager.setEnabled(!soundManager.isEnabled()),\n          title: soundManager.isEnabled() ? 'Disable sounds' : 'Enable sounds',\n          children: soundManager.isEnabled() ? '🔊' : '🔇'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerList, {\n          players: players,\n          spectators: spectators,\n          showScores: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), isSpectator && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spectator-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDC41\\uFE0F Spectating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-panel\",\n        children: [gameData.gameState === 'waiting_for_prompt' && !isSpectator && isCurrentPlayerPromptGiver() && /*#__PURE__*/_jsxDEV(PromptInput, {\n          socket: socket,\n          roomId: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), gameData.gameState === 'waiting_for_prompt' && (!isCurrentPlayerPromptGiver() || isSpectator) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waiting-prompt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for prompt giver to submit their prompt...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), isSpectator && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"spectator-note\",\n            children: \"\\uD83D\\uDC41\\uFE0F You are spectating this game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), gameData.currentImage && /*#__PURE__*/_jsxDEV(GameImage, {\n          imageUrl: gameData.currentImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), gameData.gameState === 'round_results' && gameData.roundResults && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Round \", gameData.roundResults.round, \" of \", gameData.maxRounds, \" Results\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"original-prompt\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Original Prompt: \\\"\", gameData.roundResults.originalPrompt, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guesses-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Guesses & Scores:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), ((_gameData$roundResult = gameData.roundResults.guesses) === null || _gameData$roundResult === void 0 ? void 0 : _gameData$roundResult.length) > 0 ? gameData.roundResults.guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `guess-result ${index === 0 ? 'best-guess' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guess-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"player-name\",\n                  children: [guess.playerName, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"guess-text\",\n                  children: [\"\\\"\", guess.guess, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `score ${guess.score >= 80 ? 'excellent' : guess.score >= 60 ? 'good' : guess.score >= 40 ? 'okay' : 'poor'}`,\n                children: [guess.score, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-guesses\",\n              children: \"No guesses were submitted this round!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"next-round-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Next turn starts in a few seconds...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), gameData.round <= gameData.maxRounds && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Next prompt giver: \", (_players$find = players.find(p => p.id === gameData.currentPromptGiver)) === null || _players$find === void 0 ? void 0 : _players$find.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), gameData.gameState === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-finished\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-complete-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDF89 Game Complete! \\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"All \", gameData.maxRounds, \" rounds finished!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), (() => {\n            const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\n            const winner = sortedPlayers[0];\n            const hasWinner = sortedPlayers.length > 0;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [hasWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"winner-announcement\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83C\\uDFC6 Winner: \", winner.name, \"! \\uD83C\\uDFC6\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"winner-score\",\n                  children: [winner.score, \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"final-rankings\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Final Rankings:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rankings-list\",\n                  children: sortedPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `ranking-item ${index === 0 ? 'first-place' : index === 1 ? 'second-place' : index === 2 ? 'third-place' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"rank-position\",\n                      children: index === 0 ? '🥇' : index === 1 ? '🥈' : index === 2 ? '🥉' : `${index + 1}.`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"player-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"player-name\",\n                        children: player.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"player-score\",\n                        children: [player.score, \" points\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 29\n                    }, this)]\n                  }, player.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Thanks for playing! \\uD83C\\uDFA8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total rounds played: \", gameData.maxRounds]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Players: \", players.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [gameData.gameState === 'guessing' && !isSpectator && !isCurrentPlayerPromptGiver() && /*#__PURE__*/_jsxDEV(GuessInput, {\n          socket: socket,\n          roomId: roomId,\n          timeRemaining: gameData.timeRemaining,\n          currentPlayer: currentPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), gameData.gameState === 'guessing' && isSpectator && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spectator-guessing\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDC41\\uFE0F Spectating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Watch the players guess!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), gameData.gameState === 'guessing' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guesses-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: isCurrentPlayerPromptGiver() ? `🧠 Guesses (${guesses.length}):` : `Guesses (${guesses.length}):`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), guesses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guesses-container\",\n            children: guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"guess-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: [guess.playerName, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"guess-text\",\n                children: guess.guess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-guesses\",\n            children: isCurrentPlayerPromptGiver() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83C\\uDFAF Watch the minds at work...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"See how close they get to your vision!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No guesses yet...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Be the first to guess!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(GameRoom, \"Oie8quHyCRkW17ZYMQJfd7QOmuA=\");\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","PromptInput","GuessInput","PlayerList","GameImage","soundManager","jsxDEV","_jsxDEV","Fragment","_Fragment","GameRoom","players","spectators","currentPlayer","roomId","onToggleReady","allReady","socket","isPlaying","initialGameData","onUpdatePlayers","isSpectator","_s","_gameData$roundResult","_players$find","gameData","setGameData","currentPromptGiver","currentImage","currentPrompt","timeRemaining","promptTimeRemaining","round","maxRounds","gameState","currentTurnIndex","turnsCompletedInRound","totalPlayersInRound","length","guesses","setGuesses","setMaxRounds","prev","off","on","data","playGameStart","undefined","roundResults","playPromptSubmitted","imageUrl","playGuessSubmitted","playRoundEnd","originalPrompt","playGameEnd","isCurrentPlayerPromptGiver","id","canStartGame","currentPlayerData","find","p","isCurrentPlayerReady","isReady","readyCount","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","showReady","onClick","isEnabled","setEnabled","title","showScores","map","guess","index","playerName","score","name","sortedPlayers","sort","a","b","winner","hasWinner","player","_c","$RefreshReg$"],"sources":["C:/Users/siddh/Desktop/Sid/Work/Co-curriculars/KiroHackathon/client/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PromptInput from './PromptInput';\r\nimport GuessInput from './GuessInput';\r\nimport PlayerList from './PlayerList';\r\nimport GameImage from './GameImage';\r\nimport soundManager from '../utils/soundManager';\r\n\r\nfunction GameRoom({ players, spectators = [], currentPlayer, roomId, onToggleReady, allReady, socket, isPlaying = false, initialGameData = null, onUpdatePlayers, isSpectator = false }) {\r\n  const [gameData, setGameData] = useState(initialGameData || {\r\n    currentPromptGiver: null,\r\n    currentImage: '',\r\n    currentPrompt: '',\r\n    timeRemaining: 30,\r\n    promptTimeRemaining: 30,\r\n    round: 0,\r\n    maxRounds: 5,\r\n    gameState: 'waiting',\r\n    currentTurnIndex: 0,\r\n    turnsCompletedInRound: 0,\r\n    totalPlayersInRound: players?.length || 0\r\n  });\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [maxRounds, setMaxRounds] = useState(5);\r\n\r\n  // Update game data when initial data is provided\r\n  useEffect(() => {\r\n    if (initialGameData) {\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        ...initialGameData\r\n      }));\r\n    }\r\n  }, [initialGameData]);\r\n\r\n  useEffect(() => {\r\n    // Clean up listeners (but NOT game_started unless we're playing)\r\n    socket.off('next_turn');\r\n    socket.off('prompt_submitted');\r\n    socket.off('guess_submitted');\r\n    socket.off('round_ended');\r\n    socket.off('game_finished');\r\n    socket.off('timer_update');\r\n\r\n    // Only register game_started listener if we're actually playing\r\n    if (isPlaying) {\r\n      // Only clean up game_started if we're going to register it\r\n      socket.off('game_started');\r\n      \r\n      socket.on('game_started', (data) => {\r\n        soundManager.playGameStart();\r\n        setGameData(prev => ({\r\n          ...prev,\r\n          currentPromptGiver: data.currentPromptGiver,\r\n          round: data.round,\r\n          gameState: 'waiting_for_prompt',\r\n          currentTurnIndex: data.currentTurnIndex,\r\n          turnsCompletedInRound: data.turnsCompletedInRound,\r\n          totalPlayersInRound: data.totalPlayersInRound\r\n        }));\r\n      });\r\n    }\r\n\r\n    socket.on('room_update', (data) => {\r\n      if (data.maxRounds !== undefined) {\r\n        setMaxRounds(data.maxRounds);\r\n        setGameData(prev => ({\r\n          ...prev,\r\n          maxRounds: data.maxRounds\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on('next_turn', (data) => {\r\n      // Update players with current scores\r\n      if (onUpdatePlayers && data.players) {\r\n        onUpdatePlayers(data.players);\r\n      }\r\n      \r\n      setGameData(prev => ({\r\n        ...prev,\r\n        currentPromptGiver: data.currentPromptGiver,\r\n        round: data.round,\r\n        maxRounds: data.maxRounds,\r\n        gameState: data.gameState,\r\n        currentImage: '',\r\n        currentPrompt: '',\r\n        timeRemaining: 30,\r\n        roundResults: null,\r\n        currentTurnIndex: data.currentTurnIndex,\r\n        turnsCompletedInRound: data.turnsCompletedInRound,\r\n        totalPlayersInRound: data.totalPlayersInRound\r\n      }));\r\n      setGuesses([]);\r\n    });\r\n\r\n    socket.on('prompt_submitted', (data) => {\r\n      soundManager.playPromptSubmitted();\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        currentImage: data.imageUrl,\r\n        gameState: 'guessing',\r\n        timeRemaining: data.timeRemaining || 30\r\n      }));\r\n    });\r\n\r\n    socket.on('guess_submitted', (data) => {\r\n      soundManager.playGuessSubmitted();\r\n      setGuesses(prev => [...prev, data]);\r\n    });\r\n\r\n    socket.on('round_ended', (data) => {\r\n      soundManager.playRoundEnd();\r\n      // Update players with new scores\r\n      if (onUpdatePlayers && data.players) {\r\n        onUpdatePlayers(data.players);\r\n      }\r\n      \r\n      setGameData(prev => ({\r\n        ...prev,\r\n        currentPrompt: data.originalPrompt,\r\n        gameState: 'round_results',\r\n        roundResults: {\r\n          ...data,\r\n          guesses: data.guesses || [] // Ensure it's always an array\r\n        }\r\n      }));\r\n    });\r\n\r\n    socket.on('game_finished', (data) => {\r\n      soundManager.playGameEnd();\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        gameState: 'finished'\r\n      }));\r\n    });\r\n\r\n    socket.on('timer_update', (data) => {\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        timeRemaining: data.timeRemaining\r\n      }));\r\n    });\r\n\r\n    socket.on('prompt_timer_update', (data) => {\r\n      setGameData(prev => ({\r\n        ...prev,\r\n        promptTimeRemaining: data.timeRemaining\r\n      }));\r\n    });\r\n\r\n    return () => {\r\n      // Only clean up game_started if we registered it (when isPlaying is true)\r\n      if (isPlaying) {\r\n        socket.off('game_started');\r\n      }\r\n      socket.off('next_turn');\r\n      socket.off('prompt_submitted');\r\n      socket.off('guess_submitted');\r\n      socket.off('round_ended');\r\n      socket.off('game_finished');\r\n      socket.off('timer_update');\r\n      socket.off('prompt_timer_update');\r\n    };\r\n  }, [socket, isPlaying]);\r\n\r\n  const isCurrentPlayerPromptGiver = () => {\r\n    // Try both currentPlayer.id and socket.id\r\n    return gameData.currentPromptGiver === socket.id || (currentPlayer && gameData.currentPromptGiver === currentPlayer.id);\r\n  };\r\n\r\n  const canStartGame = players.length >= 2;\r\n  const currentPlayerData = players.find(p => p.id === currentPlayer?.id);\r\n  const isCurrentPlayerReady = currentPlayerData?.isReady || false;\r\n  const readyCount = players.filter(p => p.isReady).length;\r\n\r\n  if (!isPlaying) {\r\n    return (\r\n      <div className=\"game-room\">\r\n        <div className=\"room-header\">\r\n          <h2>Room: {roomId}</h2>\r\n          <p>Players: {players.length}</p>\r\n          {spectators.length > 0 && <p>Spectators: {spectators.length}</p>}\r\n          <p>Ready: {readyCount}/{players.length}</p>\r\n        </div>\r\n        \r\n        <PlayerList players={players} spectators={spectators} showReady={true} />\r\n        \r\n        {!isSpectator && canStartGame && !allReady && (\r\n          <button \r\n            onClick={onToggleReady} \r\n            className={`ready-btn ${isCurrentPlayerReady ? 'ready' : 'not-ready'}`}\r\n          >\r\n            {isCurrentPlayerReady ? 'Not Ready' : 'Ready'}\r\n          </button>\r\n        )}\r\n        \r\n        {isSpectator && (\r\n          <div className=\"spectator-message\">\r\n            <p>👁️ You are watching as a spectator</p>\r\n            <p>Waiting for players to start the game...</p>\r\n          </div>\r\n        )}\r\n        \r\n        {allReady && (\r\n          <div className=\"starting-message\">\r\n            <p>All players ready! Starting game...</p>\r\n            <div className=\"loading-spinner\"></div>\r\n          </div>\r\n        )}\r\n        \r\n        {!canStartGame && (\r\n          <p className=\"waiting-message\">\r\n            Waiting for at least 2 players to start...\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-room playing\">\r\n      <div className=\"game-header\">\r\n        <div className=\"round-info\">\r\n          <span>\r\n            Round {gameData.round} of {gameData.maxRounds}\r\n            {gameData.totalPlayersInRound > 0 && (\r\n              <span className=\"turn-info\"> - Turn {(gameData.turnsCompletedInRound || 0) + 1} of {gameData.totalPlayersInRound}</span>\r\n            )}\r\n          </span>\r\n          <span className=\"timer\">Time: {gameData.timeRemaining}s</span>\r\n        </div>\r\n        <div className=\"sound-controls\">\r\n          <button \r\n            className={`sound-toggle ${soundManager.isEnabled() ? 'enabled' : 'disabled'}`}\r\n            onClick={() => soundManager.setEnabled(!soundManager.isEnabled())}\r\n            title={soundManager.isEnabled() ? 'Disable sounds' : 'Enable sounds'}\r\n          >\r\n            {soundManager.isEnabled() ? '🔊' : '🔇'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"game-content\">\r\n        <div className=\"left-panel\">\r\n          <PlayerList players={players} spectators={spectators} showScores={true} />\r\n          {isSpectator && (\r\n            <div className=\"spectator-indicator\">\r\n              <p>👁️ Spectating</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"center-panel\">\r\n          \r\n          {gameData.gameState === 'waiting_for_prompt' && !isSpectator && isCurrentPlayerPromptGiver() && (\r\n            <PromptInput socket={socket} roomId={roomId} />\r\n          )}\r\n          \r\n          {gameData.gameState === 'waiting_for_prompt' && (!isCurrentPlayerPromptGiver() || isSpectator) && (\r\n            <div className=\"waiting-prompt\">\r\n              <p>Waiting for prompt giver to submit their prompt...</p>\r\n              {isSpectator && <p className=\"spectator-note\">👁️ You are spectating this game</p>}\r\n            </div>\r\n          )}\r\n          \r\n          {gameData.currentImage && (\r\n            <GameImage imageUrl={gameData.currentImage} />\r\n          )}\r\n          \r\n          {gameData.gameState === 'round_results' && gameData.roundResults && (\r\n            <div className=\"round-results\">\r\n              <h3>Round {gameData.roundResults.round} of {gameData.maxRounds} Results</h3>\r\n              <div className=\"original-prompt\">\r\n                <h4>Original Prompt: \"{gameData.roundResults.originalPrompt}\"</h4>\r\n              </div>\r\n              \r\n              <div className=\"guesses-results\">\r\n                <h4>Guesses & Scores:</h4>\r\n                {gameData.roundResults.guesses?.length > 0 ? (\r\n                  gameData.roundResults.guesses.map((guess, index) => (\r\n                    <div key={index} className={`guess-result ${index === 0 ? 'best-guess' : ''}`}>\r\n                      <span className=\"guess-content\">\r\n                        <span className=\"player-name\">{guess.playerName}:</span>\r\n                        <span className=\"guess-text\">\"{guess.guess}\"</span>\r\n                      </span>\r\n                      <span className={`score ${guess.score >= 80 ? 'excellent' : guess.score >= 60 ? 'good' : guess.score >= 40 ? 'okay' : 'poor'}`}>\r\n                        {guess.score}%\r\n                      </span>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"no-guesses\">No guesses were submitted this round!</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"next-round-info\">\r\n                <p>Next turn starts in a few seconds...</p>\r\n                {gameData.round <= gameData.maxRounds && (\r\n                  <p>Next prompt giver: {players.find(p => p.id === gameData.currentPromptGiver)?.name}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {gameData.gameState === 'finished' && (\r\n            <div className=\"game-finished\">\r\n              <div className=\"game-complete-header\">\r\n                <h2>🎉 Game Complete! 🎉</h2>\r\n                <p>All {gameData.maxRounds} rounds finished!</p>\r\n              </div>\r\n              \r\n              {(() => {\r\n                const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\r\n                const winner = sortedPlayers[0];\r\n                const hasWinner = sortedPlayers.length > 0;\r\n                \r\n                return (\r\n                  <>\r\n                    {hasWinner && (\r\n                      <div className=\"winner-announcement\">\r\n                        <h3>🏆 Winner: {winner.name}! 🏆</h3>\r\n                        <p className=\"winner-score\">{winner.score} points</p>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <div className=\"final-rankings\">\r\n                      <h4>Final Rankings:</h4>\r\n                      <div className=\"rankings-list\">\r\n                        {sortedPlayers.map((player, index) => (\r\n                          <div key={player.id} className={`ranking-item ${index === 0 ? 'first-place' : index === 1 ? 'second-place' : index === 2 ? 'third-place' : ''}`}>\r\n                            <div className=\"rank-position\">\r\n                              {index === 0 ? '🥇' : index === 1 ? '🥈' : index === 2 ? '🥉' : `${index + 1}.`}\r\n                            </div>\r\n                            <div className=\"player-info\">\r\n                              <span className=\"player-name\">{player.name}</span>\r\n                              <span className=\"player-score\">{player.score} points</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"game-stats\">\r\n                      <p>Thanks for playing! 🎨</p>\r\n                      <p>Total rounds played: {gameData.maxRounds}</p>\r\n                      <p>Players: {players.length}</p>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"right-panel\">\r\n          {gameData.gameState === 'guessing' && !isSpectator && !isCurrentPlayerPromptGiver() && (\r\n            <GuessInput \r\n              socket={socket} \r\n              roomId={roomId} \r\n              timeRemaining={gameData.timeRemaining}\r\n              currentPlayer={currentPlayer}\r\n            />\r\n          )}\r\n          \r\n          {gameData.gameState === 'guessing' && isSpectator && (\r\n            <div className=\"spectator-guessing\">\r\n              <p>👁️ Spectating</p>\r\n              <p>Watch the players guess!</p>\r\n            </div>\r\n          )}\r\n          \r\n          {gameData.gameState === 'guessing' && (\r\n            <div className=\"guesses-list\">\r\n              <h4>{isCurrentPlayerPromptGiver() ? `🧠 Guesses (${guesses.length}):` : `Guesses (${guesses.length}):`}</h4>\r\n              {guesses.length > 0 ? (\r\n                <div className=\"guesses-container\">\r\n                  {guesses.map((guess, index) => (\r\n                    <div key={index} className=\"guess-item\">\r\n                      <span className=\"player-name\">{guess.playerName}:</span>\r\n                      <span className=\"guess-text\">{guess.guess}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"no-guesses\">\r\n                  {isCurrentPlayerPromptGiver() ? (\r\n                    <>\r\n                      <p>🎯 Watch the minds at work...</p>\r\n                      <p>See how close they get to your vision!</p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <p>No guesses yet...</p>\r\n                      <p>Be the first to guess!</p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}